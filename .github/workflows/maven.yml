# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      JDK_VERSION: "8"
      AUDIODEV: "null"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ matrix.os }}-java${{ env.JDK_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ env.JDK_VERSION }}-
            maven-${{ matrix.os }}-

      - name: Set JDK
        uses: actions/setup-java@v3
        with:
          java-version: |
            ${{ env.JDK_VERSION }}
            17
          distribution: 'temurin'
          mvn-toolchain-id: |
            JavaSE-1.8
            JavaSE-17

      - name: Compile Java
        uses: coactions/setup-xvfb@v1
        with:
          run: mvn clean install --file lionheart-parent/pom.xml -U -Ppc-assets

  release_win32:
    needs: build
    runs-on: windows-latest
    env:
      APP_VERSION: "1.3.0-SNAPSHOT"
      BUILD: "lionheart-remake-1.3.0-SNAPSHOT"
      TARGET: "lionheart-remake-1.3.0-SNAPSHOT_win32_x86"
    steps:
      - name: Prepare folders
        run: |
          rmdir /S /Q build
          mkdir build
          mkdir build\${{ env.TARGET }}
          mkdir build\${{ env.TARGET }}\data
          mkdir build\${{ env.TARGET }}\data\assets
          cd build\${{ env.TARGET }}
          robocopy "distribution\doc" "doc" /E /NFL /NDL /NJH /NJS /nc /ns /np
          copy "CHANGELOG" "doc\CHANGELOG.txt"
          copy "LICENSE" "doc\LICENSE.txt"
          copy "distribution\data\splash.png" "data"
          copy "distribution\data\b3dgs.cer" "data"
          copy "distribution\data\.lionengine" "data"
          copy "lionheart-pc\target\lionheart-pc-${{ env.APP_VERSION }}.jar" "data"
          copy "lionheart-pc\target\lionheart-pc-${{ env.APP_VERSION }}.jar.asc" "data"
          copy "lionheart-pc\target\lionheart-pc-${{ env.APP_VERSION }}.jar" "data"
          robocopy "..\..\lionheart-assets\src\main\resources\com\b3dgs\lionheart" "data\assets" /MIR /NFL /NDL /NJH /NJS /nc /ns /np
          del /Q /F /S "stage*.png"
          cd ..\..

      - name: Bundle JRE x86_32
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          architecture: x86
          run: jlink --compress=2 --strip-debug --no-header-files --no-man-pages --add-modules java.base,java.xml,jdk.xml.dom,java.prefs,java.desktop,java.logging --output build\${{ env.TARGET }}\data\jre_win32-x86_32

      - name: Bundle JRE x86_64
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          architecture: x64
          run: jlink --compress=2 --strip-debug --no-header-files --no-man-pages --add-modules java.base,java.xml,jdk.xml.dom,java.prefs,java.desktop,java.logging --output build\${{ env.TARGET }}\data\jre_win32-x86_64
    
      - name: msbuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Compile Lionheart Remake.exe
        run: |
          msbuild "distribution\win32\src\Lionheart Remake\Lionheart Remake.vcxproj" -t:rebuild -verbosity:diag -property:Configuration=Release
          msbuild "distribution\win32\src\Lionheart Remake Configure\Lionheart Remake Configure.vcxproj" -t:rebuild -verbosity:diag -property:Configuration=Release
       
      - name: Sign Lionheart Remake.exe
        uses: GabrielAcostaEngler/signtool-code-sign@main
        with:
          certificate: '${{ secrets.CODESIGN_BASE64 }}'
          cert-password: '${{ secrets.CODESIGN_PWD }}'
          cert-sha1: '${{ secrets.CERT_HASH }}'
          cert-description: 'Byron 3D Games Studio'
          folder: 'distribution\win32\src\Lionheart Remake\Release'
          recursive: false
          timestamp-server: 'http://timestamp.digicert.com'
          
      - name: Sign Configure.exe
        uses: GabrielAcostaEngler/signtool-code-sign@main
        with:
          certificate: '${{ secrets.CODESIGN_BASE64 }}'
          cert-password: '${{ secrets.CODESIGN_PWD }}'
          cert-sha1: '${{ secrets.CERT_HASH }}'
          cert-description: 'Byron 3D Games Studio'
          folder: 'distribution\win32\src\Lionheart Remake Configure\Release'
          recursive: false
          timestamp-server: 'http://timestamp.digicert.com'
          
      - name: Prepare 7z
        run: cd build
          
      - name: Make 7z
        uses: edgarrc/action-7z@v1
        with:
          args: 7z a -t7z -mf=off -m0=lzma2 -mx=9 "${{ env.TARGET }}.7z" "${{ env.TARGET }}"
          
      - name: Get SFX
        uses: engineerd/configurator@v0.0.10
        with:
          name: "7z.sfx"
          url: "https://7-zip.org/a/7z2201.exe"
          pathInArchive: "."
          
      - name: Copy SFX
        run: copy "7z.sfx" "${{ env.TARGET }}"
          
      - name: Make SFX
        run: copy /b "7z.sfx" + "..\distribution\win32\src\sfxmaker.txt" + "${{ env.TARGET }}.7z" "${{ env.TARGET }}.exe"
       
      - uses: engineerd/configurator@v0.0.10
        with:
          name: "ResourceHacker.exe"
          url: "http://www.angusj.com/resourcehacker/resource_hacker.zip"
          pathInArchive: "ResourceHacker.exe"
          
      - name: Update info
        run: |
          ResourceHacker.exe -open ${{ env.TARGET }}.exe -save ${{ env.TARGET }}.exe -action delete -mask versioninfo, 1,
          ResourceHacker.exe -open ${{ env.TARGET }}.exe -save ${{ env.TARGET }}.exe -action add -res "..\distribution\win32\src\versioninfo.res" -mask versioninfo, 1,
          ResourceHacker.exe -open ${{ env.TARGET }}.exe -save ${{ env.TARGET }}.exe -action changelanguage(1033)
          
      - name: Sign SFX
        uses: GabrielAcostaEngler/signtool-code-sign@main
        with:
          certificate: '${{ secrets.CODESIGN_BASE64 }}'
          cert-password: '${{ secrets.CODESIGN_PWD }}'
          cert-sha1: '${{ secrets.CERT_HASH }}'
          cert-description: 'Byron 3D Games Studio'
          folder: '.'
          recursive: false
          timestamp-server: 'http://timestamp.digicert.com'
          
      - name: Clean
        run: |
          del "${{ env.TARGET }}.7z"
          rmdir /S /Q "${{ env.TARGET }}"
          
      - name: Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ftp.b3dgs.com
          username: ${{ secrets.login }}
          password: ${{ secrets.password }}
          local-dir: .
