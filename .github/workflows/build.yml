# This workflow will:
# - compile game on windows, linux, macos
# - compile editor on windows
# - run game and editor sonar on linux

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        jdk: [17]
    runs-on: ${{ matrix.os }}
    env:
      JDK_VERSION: ${{ matrix.jdk }}
      AUDIODEV: "null"

    steps:
     - name: Checkout
       uses: actions/checkout@v3.5.0
       with:
         fetch-depth: 0

     - name: Cache
       uses: actions/cache@v3.3.1
       with:
          path: ~/.m2/repository
          key: maven-${{ matrix.os }}-java${{ matrix.jdk }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ matrix.jdk }}-
            maven-${{ matrix.os }}-

     - name: Maven
       uses: stCarolas/setup-maven@v4.5
       with:
         maven-version: 3.9.6

     - name: JDK
       uses: actions/setup-java@v3.11.0
       with:
         java-version: |
           8
           ${{ matrix.jdk }}
         distribution: 'temurin'
         mvn-toolchain-id: |
           JavaSE-1.8
           JavaSE-17

     - name: maven-settings-xml-action win
       if: matrix.os == 'windows-latest'
       shell: bash
       run: echo \<settings\>\<servers\>\<server\>\<id\>ossrh\</id\>\<username\>${{ secrets.MAVEN_USERNAME }}\</username\>\<password\>${{ secrets.MAVEN_PASSWORD }}\</password\>\</server\>\</servers\>\<mirrors\>\<mirror\>\<id\>maven-default-http-blocker\</id\>\<mirrorOf\>external:dont-match-anything-mate:*\</mirrorOf\>\<name\>Pseudo repo.\</name\>\<url\>http://0.0.0.0/\</url\>\<blocked\>false\</blocked\>\</mirror\>\</mirrors\>\</settings\> > C:\\Users\\runneradmin\\.m2\\settings.xml

     - name: maven-settings-xml-action linux
       if: matrix.os != 'windows-latest'
       run: cat ~/.m2/settings.xml | echo "<settings><mirrors><mirror><id>maven-default-http-blocker</id><mirrorOf>external:dont-match-anything-mate:*</mirrorOf><name>Pseudo repo.</name><url>http://0.0.0.0/</url><blocked>false</blocked></mirror></mirrors></settings>" > ~/.m2/settings.xml

     - name: Compile Game
       if: matrix.os != 'ubuntu-latest'
       uses: coactions/setup-xvfb@v1
       with:
         run: mvn clean install --file lionheart-parent/pom.xml -U -Ppc-assets

     - name: Compile Editor
       if: matrix.os == 'windows-latest'
       uses: coactions/setup-xvfb@v1
       with:
         run: mvn clean verify --file lionheart-editor-parent/pom.xml -U

     - name: Sonar Game
       if: matrix.os == 'ubuntu-latest'
       uses: coactions/setup-xvfb@v1
       with:
         run: mvn clean install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar --file lionheart-parent/pom.xml -U -Ppc-assets -Dsonar.organization=b3dgs -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.projectKey=b3dgs_lionheart-remake

     - name: Sonar Editor
       if: matrix.os == 'ubuntu-latest'
       uses: coactions/setup-xvfb@v1
       with:
         run: mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar --file lionheart-editor-parent/pom.xml -U -Dsonar.organization=b3dgs -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN_EDITOR }} -Dsonar.projectKey=b3dgs_lionheart-remake-editor
