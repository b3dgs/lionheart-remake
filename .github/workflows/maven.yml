# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  APP_NAME: "lionheart-remake"
  APP_VERSION: "1.3.0-SNAPSHOT"

jobs:
  win32-x86:
    runs-on: windows-latest

    env:
      JDK_VERSION: "8"
      AUDIODEV: "null"
      APP_PLATFORM: "win32-x86"

    steps:   
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: java${{ env.JDK_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: java${{ env.JDK_VERSION }}-

      - name: Set JDK
        uses: actions/setup-java@v3
        with:
          java-version: |
            ${{ env.JDK_VERSION }}
            17
          distribution: 'temurin'
          mvn-toolchain-id: |
            JavaSE-1.8
            JavaSE-17

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Decode Keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'android.jks'
          fileDir: 'lionheart-pc/'
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Compile Java
        uses: coactions/setup-xvfb@v1
        with:
          run: mvn clean install --file lionheart-parent/pom.xml -U -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} -Dkeystore=android.jks -Dkeystore.alias=${{ secrets.KEYSTORE_ALIAS }} -Dkeystore.pass=${{ secrets.KEYSTORE_STOREPASS }} -Dkeystore.key=${{ secrets.KEYSTORE_PASS }} -DskipTests=true -Ppc,sign
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEYSTORE_PASS }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_STOREPASS }}

      - name: Prepare folders
        run: |
          set TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          mkdir build
          mkdir build\%TARGET%
          mkdir build\%TARGET%\data
          mkdir build\%TARGET%\data\assets
          cd build\%TARGET%
          robocopy "..\..\distribution\doc" "doc" /E /NFL /NDL /NJH /NJS /nc /ns /np
          copy "..\..\CHANGELOG" "doc\CHANGELOG.txt"
          copy "..\..\LICENSE" "doc\LICENSE.txt"
          copy "..\..\distribution\data\splash.png" "data"
          copy "..\..\distribution\data\b3dgs.cer" "data"
          copy "..\..\distribution\data\.lionengine" "data"
          copy "..\..\lionheart-pc\target\lionheart-pc-${{ env.APP_VERSION }}.jar" "data"
          copy "..\..\distribution\win32\bat\Lionheart Remake.bat" .
          copy "..\..\distribution\win32\bat\Configure.bat" .
          copy "..\..\distribution\win32\bat\Profile.bat" .
          robocopy "..\..\lionheart-assets\src\main\resources\com\b3dgs\lionheart" "data\assets" /MIR /NFL /NDL /NJH /NJS /nc /ns /np
          del /Q /F /S "stage*.png"
          cd ..\..
        shell: cmd

      - name: Set JRE x86_32
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          architecture: x86

      - name: Bundle JRE x86_32
        run: |
          set TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          jlink --compress=2 --strip-debug --no-header-files --no-man-pages --add-modules java.base,java.xml,jdk.xml.dom,java.prefs,java.desktop,java.logging --output build\%TARGET%\data\jre_win32-x86_32
        shell: cmd

      - name: Set JRE x86_64
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          architecture: x64

      - name: Bundle JRE x86_64
        run: |
          set TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          jlink --compress=2 --strip-debug --no-header-files --no-man-pages --add-modules java.base,java.xml,jdk.xml.dom,java.prefs,java.desktop,java.logging --output build\%TARGET%\data\jre_win32-x86_64
        shell: cmd

      - name: msbuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Compile vsproject
        run: |
          set TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          msbuild "distribution\win32\src\Lionheart Remake\Lionheart Remake\Lionheart Remake.vcxproj" -t:rebuild -verbosity:diag -property:Configuration=Release
          msbuild "distribution\win32\src\Lionheart Remake Configure\Lionheart Remake Configure\Lionheart Remake Configure.vcxproj" -t:rebuild -verbosity:diag -property:Configuration=Release
          copy "distribution\win32\src\Lionheart Remake\Lionheart Remake\Release\Lionheart Remake.exe" "build\%TARGET%"
          copy "distribution\win32\src\Lionheart Remake Configure\Lionheart Remake Configure\Release\Configure.exe" "build\%TARGET%"
        shell: cmd

      - name: Sign
        run: |
          set TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          dir "C:\Program Files (x86)\Windows Kits\10\bin\"
          echo ${{ secrets.CODESIGN_BASE64 }} >> base64.txt
          certutil -decode base64.txt cert.pfx
          "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86\signtool.exe" sign /f cert.pfx /p ${{ secrets.CODESIGN_PWD }} /tr http://timestamp.digicert.com /td SHA256 /fd SHA256 "build\%TARGET%\Lionheart Remake.exe"
          "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86\signtool.exe" sign /f cert.pfx /p ${{ secrets.CODESIGN_PWD }} /tr http://timestamp.digicert.com /td SHA256 /fd SHA256 "build\%TARGET%\Configure.exe"
          del base64.txt
          del cert.pfx
        shell: cmd

      - name: Make Archive
        run: |
          set TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          copy "distribution\win32\src\sfxmaker.txt" "build"
          copy "distribution\win32\src\7zsd_LZMA2.sfx" "build"
          cd build
          7z a -t7z -mf=off -m0=lzma2 -mx=9 %TARGET%.7z %TARGET%
          copy /b "7zsd_LZMA2.sfx" + "sfxmaker.txt" + "%TARGET%.7z" "%TARGET%.exe"
          cd ..
          mkdir reshack
        shell: cmd

      - name: Get reshack
        uses: gamedev-thingy/Download-Extract@done
        with:
          url: "http://www.angusj.com/resourcehacker/resource_hacker.zip"
          destination: reshack
          ZIPname: "resource_hacker.zip"

      - name: Update info
        run: |
          set TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          reshack\ResourceHacker.exe -open "build\%TARGET%.exe" -save "build\%TARGET%.exe" -action addoverwrite -res "distribution\win32\src\versioninfo.res",
        shell: cmd

      - name: Sign SFX
        run: |
          set TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          echo ${{ secrets.CODESIGN_BASE64 }} >> base64.txt
          certutil -decode base64.txt cert.pfx
          "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86\signtool.exe" sign /f cert.pfx /p ${{ secrets.CODESIGN_PWD }} /tr http://timestamp.digicert.com /td SHA256 /fd SHA256 "build\%TARGET%.exe"
          del base64.txt
          del cert.pfx
        shell: cmd

      - name: Clean
        run: |
          set TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          cd build
          del 7zsd_LZMA2.sfx
          del sfxmaker.txt
          del "%TARGET%.7z"
          rmdir /S /Q "%TARGET%"
          sha256sum %TARGET%.exe
          sha256sum %TARGET%.exe > %TARGET%_sha256sum
        shell: cmd

      - name: Deploy Archive
        uses: dennisameling/ftp-upload-action@v1.0.10
        with:
          server: ftp.b3dgs.com
          username: ${{ secrets.LOGIN }}
          password: ${{ secrets.PASSWORD }}
          local_dir: build/
          server_dir: ./${{ env.APP_VERSION }}/
          secure: false

  linux-x86_64:
    runs-on: ubuntu-latest

    env:
      JDK_VERSION: "8"
      AUDIODEV: "null"
      APP_PLATFORM: "linux-x86_64"

    steps:   
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: java${{ env.JDK_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: java${{ env.JDK_VERSION }}-

      - name: Set JDK
        uses: actions/setup-java@v3
        with:
          java-version: |
            ${{ env.JDK_VERSION }}
            17
          distribution: 'temurin'
          mvn-toolchain-id: |
            JavaSE-1.8
            JavaSE-17

      - name: Set GCC
        uses: egor-tensin/setup-gcc@v1.3
        with:
          version: latest
          platform: x64

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Decode Keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'android.jks'
          fileDir: 'lionheart-pc/'
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Compile Java
        uses: coactions/setup-xvfb@v1
        with:
          run: mvn clean install --file lionheart-parent/pom.xml -U -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} -Dkeystore=android.jks -Dkeystore.alias=${{ secrets.KEYSTORE_ALIAS }} -Dkeystore.pass=${{ secrets.KEYSTORE_STOREPASS }} -Dkeystore.key=${{ secrets.KEYSTORE_PASS }} -DskipTests=true -Ppc,sign
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEYSTORE_PASS }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_STOREPASS }}

      - name: Prepare folders
        run: |
          export TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          mkdir build
          mkdir build/$TARGET
          mkdir build/$TARGET/data
          mkdir build/$TARGET/data/assets
          cd build/$TARGET
          cp -R ../../distribution/doc "doc"
          cp "../../CHANGELOG" "doc/CHANGELOG.txt"
          cp "../../LICENSE" "doc/LICENSE.txt"
          cp ../../distribution/data/splash.png data
          cp ../../distribution/data/b3dgs.cer data
          cp ../../distribution/data/.lionengine data
          cp "../../lionheart-pc/target/lionheart-pc-${{ env.APP_VERSION }}.jar" data
          cp ../../distribution/linux/sh/lionheart-remake.sh .
          cp ../../distribution/linux/sh/configure.sh .
          cp ../../distribution/linux/sh/profile.sh .
          cp -R ../../lionheart-assets/src/main/resources/com/b3dgs/lionheart/. data/assets
          find . -name 'stage*.png' -delete
          chmod +x lionheart-remake.sh
          chmod +x configure.sh
          chmod +x profile.sh
          cd ../..

      - name: Set JRE x86_64
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          architecture: x64

      - name: Bundle JRE x86_64
        run: |
          export TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          jlink --compress=2 --strip-debug --no-header-files --no-man-pages --add-modules java.base,java.xml,jdk.xml.dom,java.prefs,java.desktop,java.logging --output build/$TARGET/data/jre_linux-x86_64

      - name: Compile C
        run: |
          export TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          gcc distribution/linux/src/main.c -s -static -o build/$TARGET/lionheart-remake
          chmod +x build/$TARGET/lionheart-remake

      - name: Make Archive
        run: |
          export TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          cd build
          tar -cf - $TARGET | xz -1ze -T0 >$TARGET.tar.xz
          rm -r -f $TARGET
          sha256sum $TARGET.tar.xz
          sha256sum $TARGET.tar.xz > $TARGET"_sha256sum"

      - name: Deploy Archive
        uses: dennisameling/ftp-upload-action@v1.0.10
        with:
          server: ftp.b3dgs.com
          username: ${{ secrets.LOGIN }}
          password: ${{ secrets.PASSWORD }}
          local_dir: build/
          server_dir: ./${{ env.APP_VERSION }}/
          secure: false

  android-arm:
    runs-on: ubuntu-latest

    env:
      JDK_VERSION: "17"
      main_project_module: app
      APP_PLATFORM: "android-arm"

    steps:  
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: java${{ env.JDK_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: java${{ env.JDK_VERSION }}-

      - name: Set JDK
        uses: actions/setup-java@v3
        with:
          java-version: |
            8
            ${{ env.JDK_VERSION }}
          distribution: 'temurin'
          mvn-toolchain-id: |
            JavaSE-1.8
            JavaSE-17

      - name: Decode Keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'android.jks'
          fileDir: 'lionheart-android/app/'
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Build JAR
        run: mvn clean install --file lionheart-parent/pom.xml -U -DskipTests=true -Pgame

      - name: Build APK
        run: |
          cd lionheart-android
          chmod +x ./gradlew
          ./gradlew assembleRelease -Pkeystore=android.jks -Pkeystore.alias=${{ secrets.KEYSTORE_ALIAS }} -Pkeystore.storepassword=${{ secrets.KEYSTORE_STOREPASS }} -Pkeystore.password=${{ secrets.KEYSTORE_PASS }}

      - name: Sign app APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: lionheart-android/app/build/outputs/apk/release/
          signingKeyBase64: ${{ secrets.KEYSTORE_BASE64 }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_STOREPASS }}
          keyPassword: ${{ secrets.KEYSTORE_PASS }}
        env:
          BUILD_TOOLS_VERSION: "33.0.0"

      - name: Make Archive
        run: |
          export TARGET=${{ env.APP_NAME }}-${{ env.APP_VERSION }}_${{ env.APP_PLATFORM }}
          mkdir build
          mkdir build/$TARGET
          cd build/$TARGET
          cp -R ../../distribution/doc "doc"
          cp "../../CHANGELOG" "doc/CHANGELOG.txt"
          cp "../../LICENSE" "doc/LICENSE.txt"
          cp "../../lionheart-android/app/build/outputs/apk/release/app-release-signed.apk" ${{ env.APP_NAME }}-${{ env.APP_VERSION }}.apk
          cd ..
          tar -cf - $TARGET | xz -1ze -T0 >$TARGET.tar.xz
          rm -r -f $TARGET
          sha256sum $TARGET.tar.xz
          sha256sum $TARGET.tar.xz > $TARGET"_sha256sum"

      - name: Deploy Archive
        uses: dennisameling/ftp-upload-action@v1.0.10
        with:
          server: ftp.b3dgs.com
          username: ${{ secrets.LOGIN }}
          password: ${{ secrets.PASSWORD }}
          local_dir: build/
          server_dir: ./${{ env.APP_VERSION }}/
          secure: false
